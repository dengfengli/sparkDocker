version: '2' 

services:
  namenode:
    build: ./hadoop-base
    container_name: namenode
    hostname: namenode
    networks: 
      - hadoopnet
    ports:
      - "50070:50070"
      - "8088:8088"
      - "9000:9000"
      - "4040:4040"
      - "18080:18080"
      - "19888:19888"
      # - "8042:8042"
    command: "/etc/bootstrap.sh -d -namenode"
  datanode01:
    build: ./hadoop-base
    container_name: datanode01
    networks: 
      - hadoopnet
    hostname: datanode01
    command: "/etc/bootstrap.sh -d -datanode"
  datanode02:
    build: ./hadoop-base
    container_name: datanode02
    networks: 
      - hadoopnet
    hostname: datanode02
    command: "/etc/bootstrap.sh -d -datanode"
  # submitnode:
  #   build: ./hadoop-base
  #   container_name: submitnode
  #   networks: 
  #     - hadoopnet
  #   hostname: submitnode
  #   command: "/etc/bootstrap.sh -d"

  postgres:
    image: postgres:9.6
    hostname: postgres
    networks: 
          - hadoopnet
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  airflow:
        build: ./airflow
        container_name: airflow
        restart: always
        depends_on:
            - postgres
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
        networks: 
          - hadoopnet
        hostname: airflow
        volumes:
            - ./airflow/dags:/usr/local/airflow/dags
        ports:
            - "8080:8080"
        command: webserver
networks:
  hadoopnet:
  # lb:
  #   image: dockercloud/haproxy
  #   hostname: load-balancer
  #   network: hadoopnet
  #   container_name: load-balancer
  #   links:
  #     - "datanode01"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - 8081:8081